- head_style "rails_admin/list"
- head_style "rails_admin/dashboard"
- head_style "rails_admin/ra.timeline.css"
- head_javascript "rails_admin/application.js"
- head_javascript "rails_admin/ra.timeline.js"
- head_javascript "dashboard_animate.js"


#block-tables.block
	= breadcrumbs_for :dashboard, nil

	.content
		%h2.title= @page_name
		.inner
			= render(:partial => 'layouts/rails_admin/flash', :locals => {:flash => flash})
			%table.table.grid
				%thead
					%tr
						%th.start
							Record Type
						%th= t "admin.dashboard.last_used"
						%th= t "admin.dashboard.records"
						%th=# t "admin.dashboard.modify"
				%tbody
					- @abstract_models.each do |abstract_model|
						- unless abstract_model.pretty_name == "Animal weight" or abstract_model.pretty_name == "Animal color" or abstract_model.pretty_name == "Status" or abstract_model.pretty_name == "Organization" or abstract_model.pretty_name == "User"
							- if authorized? :list, abstract_model
								- list_path = rails_admin_list_path(:model_name => abstract_model.to_param)
								- row_class = "#{cycle("odd", "even")}#{" link" if list_path}"

								%tr{:class => row_class, :"data-link" => list_path}
									%td.start
										%span.show= link_to RailsAdmin.config(abstract_model).label, list_path
									%td
										- if (last_used = @most_recent_changes[abstract_model.pretty_name])
											= time_ago_in_words last_used
											= t "admin.dashboard.ago"
									%td.count
										%span.scale
											- percent = @count[abstract_model.pretty_name] * 100 / @max unless @max == 0
											- percent = 1 if percent.nil?
											- percent = 2 if percent == 0
											-if percent == 2
												%div{:class => "bar #{get_indicator(percent)} no_bar", :style => "width:2%;opacity: 0;", :'data-animate-length' => "#{percent}%"}
													= @count[abstract_model.pretty_name]
											- else
												%div{:class => "bar #{get_indicator(percent)}", :style => "width:2%;opacity: 0;", :'data-animate-length' => "#{percent}%"}
													= @count[abstract_model.pretty_name]
									%td.last
										- if authorized? :new, abstract_model
											- new_path = rails_admin_new_path(:model_name => abstract_model.to_param)
											= action_icon(new_path, :add, t("admin.dashboard.add_new"))
										- history_path = rails_admin_history_model_path(:model_name => abstract_model.to_param)
										= action_icon(history_path, :calendar, t("admin.history.name"))
/ graph animal statuses in pie chart
- cache("dashboard_piechart_for_#{current_user.id}") do
	- unless @final_status_hash.blank?
		= render :partial => "animal_status_graph", :object => @final_status_hash
/ show tweets if user has twitter account
- cache("dashboard_tweetlist_for_#{current_user.id}") do
	- unless @tweets.blank?
		= render :partial => "tweets_list", :object => @tweets
- if authorized? :see_history
	#block-tables.block
		.content
			%h2.title= t("admin.history.name")
			.inner
				#timeline
				#listingHistory
					= render(:partial => 'history', :locals => {:month => Time.now.month, :year => Time.now.year, :history => @history})
				- head_javascript do
					:plain
						$j(document).ready(function($) {
							var cache = {}; 
							$("#timeline").timeline({
								url: "#{ rails_admin_history_slider_path }",
								monthChanged: function(month, year) {
									if (cache[year] && cache[year][month]) {
										$("#listingHistory").html(cache[year][month]);
									} else {
										$j("#listingHistory").load(
											"#{ rails_admin_history_list_path }",
											{ month: month, year: year },
											function(response, status, xhr) {
												if (!cache[year]) { cache[year] = {}; }
												cache[year][month] = response;
											}
										);
									}
								},
								monthNames: #{ActiveSupport::JSON.encode(month_names).html_safe}
							});
						});
