<script type="text/javascript">
	//setup juggernaut to handle real time updating page changes
	//this one handles changes made with best in place
	var jug = new Juggernaut({
		secure: false,
		host: 'hospitium-juggernaut.herokuapp.com',
		port: 80,
		transports: ['xhr-polling','jsonp-polling']
	});

	jug.subscribe("/observer/<%= animal.uuid %>", function(data){
		var updated_text = "There was an update, but a problem displaying. Please refresh."
		jQuery.each(data.record, function(i, val) {
			if (i != "updated_at"){
				updated_text = val[1];
				if ($("#best_in_place_animal_<%= animal.id %>_"+i).attr("data-collection") !== undefined) {
					var brand = $('#best_in_place_animal_<%= animal.id %>_'+i).attr("data-collection");
					var test = $.parseJSON(brand);
					$.each(test, function(index, value) {
						if(value[0] == val[1]){
							updated_text = value[1];
						}
					});
				} else {
				    //do nothing
				}
				$('#best_in_place_animal_<%= animal.id %>_'+i).css("background-color","#D1EED1");
				$('#best_in_place_animal_<%= animal.id %>_'+i).html(updated_text);
				$('#best_in_place_animal_<%= animal.id %>_'+i).delay(1500).animate({backgroundColor: "#f5f5f5"}, 1000 );
			}
		});
	});
</script>
<script type="text/javascript">
	//create the date picker for adding an animal weight
	$( "#animal_weight_date_of_weight" ).datepicker();
	$.datepicker.setDefaults({
	   dateFormat: 'D, dd M yy' 
	});
	
	//handle modal form submit buttons.
	$('.submit-button').click(function() {
		var form_id = $(this).attr("data-form-id");
		$("#"+form_id).submit();
		if ($(".field_with_errors")[0]){
		   // Do something here if class exists
		}else{
			$("#"+form_id).fadeOut("slow", function() {
				$("."+form_id+"_bar").fadeIn("slow");
			});
		}
	});
	
	$('a[data-toggle="tab"]').on('shown', function (e) {
		if ($('canvas').length) { // implies *not* zero
	    //do nothing
	  } else {
	    var line1 = <%= raw(animal_weights.to_json) %>;
		  var plot1 = $.jqplot('chart1', [line1], {
		      title:'Animal Weight',
					grid: {
	            background: '#FCF8E3',
			        gridLineColor: '#FBEED5',    // *Color of the grid lines.
			        borderColor: '#DDD',     // CSS color spec for border around grid.
			shadow:false
	        },
			    seriesDefaults: {
			        color: '#49AFCD',      // CSS color spec to use for the line.  Determined automatically.
			    },
		      axes:{
		        xaxis:{
		          renderer:$.jqplot.DateAxisRenderer,
		          tickOptions:{
		            formatString:'%b&nbsp;%#d'
		          } 
		        },
		        yaxis:{
		          // tickOptions:{
		          //   formatString:'%.2f'
		          //   }
		        }
		      },
		      highlighter: {
		        show: true,
		        sizeAdjust: 7.5
		      },
		      cursor: {
		        show: false
		      }
		  });
	  }
	});
	

</script>