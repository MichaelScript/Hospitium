<div class="row-fluid">
	<div class="span12">
		<div class="well animal-index-well">
			<div class="row-fluid animal-index-action-row">
				<div class="span7">
					<a class="btn" href="/admin/animals/new"><i class="icon-plus"></i> Add New Animal</a>
					&nbsp;
					<a class="btn" href="/send-to-adopt-a-pet" id="animal_sync_button"><i class="icon-share"></i> Sync Public To Adopt-A-Pet</a>
					&nbsp;
					<a class="btn" href="/admin/animals.xls" id="animal_sync_button"><i class="icon-download"></i> Export</a>
				</div>
				<!-- <div class="span1"> &nbsp; </div> -->
				<div class="span5 pull-right">
				<a class="btn pull-right" data-toggle="modal" href="#myModal" ><i class="icon-search"></i> Advanced Search</a>
				</div>
			</div>
		</div>
		<ul class="thumbnails" id="animal_index">
				<%= render "animal_row", :animals => @animals %>
		</ul>
		<%= will_paginate @animals, :id => "pagination-container" %>
	</div>
</div>



<%= render 'search', :search => @search, :presenter => @presenter %>

<% content_for :javascript_footer do %>
	<script>		
		$(function(){
			var $container = $('#animal_index');
			$container.imagesLoaded(function(){
				$container.masonry({
					itemSelector: '.animal-card',
				});
			});

			$('#animal_index').infinitescroll({
				navSelector  : '#pagination-container',    // selector for the paged navigation 
				nextSelector : '.next_page > a',  // selector for the NEXT link (to page 2)
				itemSelector : '.animal-card',     // selector for all items you'll retrieve
				loading: {
					finishedMsg: 'No more animals to load.',
					msgText: "Loading next set of animals...",
					img: 'https://d4uktpxr9m70.cloudfront.net/images/scroll-loader.gif'
				}
			},
			// trigger Masonry as a callback
			function( newElements ) {
				// hide new items while they are loading
				var $newElems = $( newElements ).css({ opacity: 0 });
				// ensure that images load before adding to masonry layout
				$newElems.imagesLoaded(function(){
					// show elems now they're ready
					$newElems.animate({ opacity: 1 });
					$container.masonry( 'appended', $newElems, true ); 
				});
			}
		);
	});
	</script>
<%end%>
